nimTitle	sysUt	cligen/sysUt.html	module cligen/sysUt		0
nim	`:=`	cligen/sysUt.html#:=,T,T	proc `:=`[T](x: var T; y: T): T		2
nim	findUO	cligen/sysUt.html#findUO,string,char	proc findUO(s: string; c: char): int		7
nim	delete	cligen/sysUt.html#delete,string,Natural	proc delete(x: var string; i: Natural)		13
nim	maybePar	cligen/sysUt.html#maybePar.i,bool,int,int	iterator maybePar(parallel: bool; a, b: int): int		21
nim	enumerate	cligen/sysUt.html#enumerate.m,ForLoopStmt	macro enumerate(x: ForLoopStmt): untyped		30
nim	toItr	cligen/sysUt.html#toItr.m,ForLoopStmt	macro toItr(x: ForLoopStmt): untyped		47
nim	incd	cligen/sysUt.html#incd,T,int	proc incd[T: Ordinal | uint | uint64](x: var T; amt = 1): T		60
nim	decd	cligen/sysUt.html#decd,T,int	proc decd[T: Ordinal | uint | uint64](x: var T; amt = 1): T		64
nim	postInc	cligen/sysUt.html#postInc,T,int	proc postInc[T: Ordinal | uint | uint64](x: var T; amt = 1): T		68
nim	postDec	cligen/sysUt.html#postDec,T,int	proc postDec[T: Ordinal | uint | uint64](x: var T; amt = 1): T		72
nim	delItem	cligen/sysUt.html#delItem,seq[T],T	proc delItem[T](x: var seq[T]; item: T): int		76
nim	seekable	cligen/sysUt.html#seekable,File	proc seekable(f: File): bool		82
nim	`&`	cligen/sysUt.html#&,openArray[T],openArray[T]	proc `&`[T](x: openArray[T]; y: openArray[T]): seq[T]		87
nim	echoQuit130	cligen/sysUt.html#echoQuit130	proc echoQuit130()		93
nim	CopyMemable	cligen/sysUt.html#CopyMemable	type CopyMemable		97
nim	newSeqNoInit	cligen/sysUt.html#newSeqNoInit,Natural	proc newSeqNoInit[T: CopyMemable](len: Natural): seq[T]		100
nim	toOa	cligen/sysUt.html#toOa.t,pointer,int,int	template toOa[T](p: pointer; a, b: int): untyped		107
nim	incSat	cligen/sysUt.html#incSat,T	proc incSat[T: Ordinal](x: var T)		114
nim	decSat	cligen/sysUt.html#decSat,T	proc decSat[T: Ordinal](x: var T)		116
