/* Generated by the Nim Compiler v2.1.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI687865870 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI922746957 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI922746963 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555174 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555172 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555172.node = NNI33555172;
NTI33555174.base = NTI33555171;
NTI33555175.base = NTI33555171;
var NNI33555171 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555174, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555175, name: "up", sons: null}]};
NTI33555171.node = NNI33555171;
var NNI33555167 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555167.node = NNI33555167;
NTI33555171.base = NTI33555167;
NTI33555172.base = NTI33555171;
NTI134217741.base = NTI33555172;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555172;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555172;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555172;
var NNI922746963 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI922746957, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI922746963.node = NNI922746963;
var NNI687865870 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI687865870.node = NNI687865870;

function mnewString(len_33556990) {
        var result = new Array(len_33556990);
    for (var i = 0; i < len_33556990; i++) {result[i] = 0;}
    return result;
  

  
}

function toJSStr(s_33556891) {
  var result_33556892 = null;

    var res_33556933 = newSeq_33556909((s_33556891).length);
    var i_33556934 = 0;
    var j_33556935 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556934 < (s_33556891).length)) break Label2;
          var c_33556936 = s_33556891[i_33556934];
          if ((c_33556936 < 128)) {
          res_33556933[j_33556935] = String.fromCharCode(c_33556936);
          i_33556934 += 1;
          }
          else {
            var helper_33556948 = newSeq_33556909(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556949 = c_33556936.toString(16);
                  if ((((code_33556949) == null ? 0 : (code_33556949).length) == 1)) {
                  helper_33556948.push("%0");;
                  }
                  else {
                  helper_33556948.push("%");;
                  }
                  
                  helper_33556948.push(code_33556949);;
                  i_33556934 += 1;
                  if ((((s_33556891).length <= i_33556934) || (s_33556891[i_33556934] < 128))) {
                  break Label3;
                  }
                  
                  c_33556936 = s_33556891[i_33556934];
                }
            };
++excHandler;
            try {
            res_33556933[j_33556935] = decodeURIComponent(helper_33556948.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556933[j_33556935] = helper_33556948.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556935 += 1;
        }
    };
    if (res_33556933.length < j_33556935) { for (var i = res_33556933.length ; i < j_33556935 ; ++i) res_33556933.push(null); }
               else { res_33556933.length = j_33556935; };
    result_33556892 = res_33556933.join("");

  return result_33556892;

}

function raiseException(e_33556643, ename_33556644) {
    e_33556643.name = ename_33556644;
    if ((excHandler == 0)) {
    unhandledException(e_33556643);
    }
    
    throw e_33556643;

  
}

function addInt(a_33557037, b_33557038) {
        var result = a_33557037 + b_33557038;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557311, a_33557312, b_33557313) {
  var result_33557314 = 0;

  BeforeRet: {
    if (((a_33557312 <= i_33557311) && (i_33557311 <= b_33557313))) {
    result_33557314 = i_33557311;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557314;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557255, src_33557256, ti_33557257) {
  var result_33557266 = null;

    switch (ti_33557257.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557246(ti_33557257))) {
      result_33557266 = src_33557256;
      }
      else {
        result_33557266 = [src_33557256[0], src_33557256[1]];
      }
      
      break;
    case 19:
            if (dest_33557255 === null || dest_33557255 === undefined) {
        dest_33557255 = {};
      }
      else {
        for (var key in dest_33557255) { delete dest_33557255[key]; }
      }
      for (var key in src_33557256) { dest_33557255[key] = src_33557256[key]; }
      result_33557266 = dest_33557255;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557257.base == null))) {
      result_33557266 = nimCopy(dest_33557255, src_33557256, ti_33557257.base);
      }
      else {
      if ((ti_33557257.kind == 17)) {
      result_33557266 = (dest_33557255 === null || dest_33557255 === undefined) ? {m_type: ti_33557257} : dest_33557255;
      }
      else {
        result_33557266 = (dest_33557255 === null || dest_33557255 === undefined) ? {} : dest_33557255;
      }
      }
      nimCopyAux(result_33557266, src_33557256, ti_33557257.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557256)) { 
        if(dest_33557255 === null || dest_33557255 === undefined || dest_33557255.length != src_33557256.length) {
          dest_33557255 = new src_33557256.constructor(src_33557256);
        } else {
          dest_33557255.set(src_33557256, 0);
        }
        result_33557266 = dest_33557255;
      } else {
        if (src_33557256 === null) {
          result_33557266 = null;
        }
        else {
          if (dest_33557255 === null || dest_33557255 === undefined || dest_33557255.length != src_33557256.length) {
            dest_33557255 = new Array(src_33557256.length);
          }
          result_33557266 = dest_33557255;
          for (var i = 0; i < src_33557256.length; ++i) {
            result_33557266[i] = nimCopy(result_33557266[i], src_33557256[i], ti_33557257.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557256 === null) {
        result_33557266 = null;
      }
      else {
        if (dest_33557255 === null || dest_33557255 === undefined || dest_33557255.length != src_33557256.length) {
          dest_33557255 = new Array(src_33557256.length);
        }
        result_33557266 = dest_33557255;
        for (var i = 0; i < src_33557256.length; ++i) {
          result_33557266[i] = nimCopy(result_33557266[i], src_33557256[i], ti_33557257.base);
        }
      }
    
      break;
    case 28:
            if (src_33557256 !== null) {
        result_33557266 = src_33557256.slice(0);
      }
    
      break;
    default: 
      result_33557266 = src_33557256;
      break;
    }

  return result_33557266;

}

function chckIndx(i_33557306, a_33557307, b_33557308) {
  var result_33557309 = 0;

  BeforeRet: {
    if (((a_33557307 <= i_33557306) && (i_33557306 <= b_33557308))) {
    result_33557309 = i_33557306;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557306, a_33557307, b_33557308);
    }
    
  };

  return result_33557309;

}

function makeNimstrLit(c_33556885) {
      var result = [];
  for (var i = 0; i < c_33556885.length; ++i) {
    result[i] = c_33556885.charCodeAt(i);
  }
  return result;
  

  
}

function subInt(a_33557041, b_33557042) {
        var result = a_33557041 - b_33557042;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556888) {
      var ln = c_33556888.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556888.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556888.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_33557045, b_33557046) {
        var result = a_33557045 * b_33557046;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);
var ConstSet9 = setConstr([65, 90], [97, 122]);

function nimMax(a_33557095, b_33557096) {
    var Temporary1;

  var result_33557097 = 0;

  BeforeRet: {
    if ((b_33557096 <= a_33557095)) {
    Temporary1 = a_33557095;
    }
    else {
    Temporary1 = b_33557096;
    }
    
    result_33557097 = Temporary1;
    break BeforeRet;
  };

  return result_33557097;

}

function nimMin(a_33557091, b_33557092) {
    var Temporary1;

  var result_33557093 = 0;

  BeforeRet: {
    if ((a_33557091 <= b_33557092)) {
    Temporary1 = a_33557091;
    }
    else {
    Temporary1 = b_33557092;
    }
    
    result_33557093 = Temporary1;
    break BeforeRet;
  };

  return result_33557093;

}

function addChar(x_33557402, c_33557403) {
    x_33557402.push(c_33557403);

  
}
var objectID_1140850863 = [0];

function setTheme(theme_536870918) {
    document.documentElement.setAttribute("data-theme", theme_536870918);
    window.localStorage.setItem("theme", theme_536870918);

  
}

function add_33556366(x_33556367, x_33556367_Idx, y_33556368) {
          if (x_33556367[x_33556367_Idx] === null) { x_33556367[x_33556367_Idx] = []; }
      var off = x_33556367[x_33556367_Idx].length;
      x_33556367[x_33556367_Idx].length += y_33556368.length;
      for (var i = 0; i < y_33556368.length; ++i) {
        x_33556367[x_33556367_Idx][off+i] = y_33556368.charCodeAt(i);
      }
    

  
}

function newSeq_33556909(len_33556911) {
  var result_33556912 = [];

    result_33556912 = new Array(len_33556911); for (var i = 0 ; i < len_33556911 ; ++i) { result_33556912[i] = null; }
  return result_33556912;

}

function unhandledException(e_33556639) {
    var buf_33556640 = [[]];
    if (!(((e_33556639.message).length == 0))) {
    buf_33556640[0].push.apply(buf_33556640[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556640[0].push.apply(buf_33556640[0], e_33556639.message);;
    }
    else {
    buf_33556640[0].push.apply(buf_33556640[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556640[0].push.apply(buf_33556640[0], [32,91]);;
    add_33556366(buf_33556640, 0, e_33556639.name);
    buf_33556640[0].push.apply(buf_33556640[0], [93,10]);;
    var cbuf_33556641 = toJSStr(buf_33556640[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556641);
  }
  else {
    throw cbuf_33556641;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557035) {
        if (a_33557035 > 2147483647 || a_33557035 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990087(result_301990089, result_301990089_Idx, x_301990090, start_301990091, n_301990092) {
    var Temporary1;

    var old_301990093 = (result_301990089[result_301990089_Idx]).length;
    if (result_301990089[result_301990089_Idx].length < (Temporary1 = chckRange(addInt(old_301990093, n_301990092), 0, 2147483647), Temporary1)) { for (var i = result_301990089[result_301990089_Idx].length; i < Temporary1; ++i) result_301990089[result_301990089_Idx].push(0); }
         else {result_301990089[result_301990089_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990107 = 0;
      var i_536872106 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_536872106 < n_301990092)) break Label4;
            iHEX60gensym4_301990107 = i_536872106;
            result_301990089[result_301990089_Idx][chckIndx(addInt(old_301990093, iHEX60gensym4_301990107), 0, (result_301990089[result_301990089_Idx]).length - 1)] = x_301990090.charCodeAt(chckIndx(addInt(start_301990091, iHEX60gensym4_301990107), 0, (x_301990090).length - 1));
            i_536872106 = addInt(i_536872106, 1);
          }
      };
    };

  
}

function addChars_301990083(result_301990085, result_301990085_Idx, x_301990086) {
    addChars_301990087(result_301990085, result_301990085_Idx, x_301990086, 0, ((x_301990086) == null ? 0 : (x_301990086).length));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addChars_301990083(result_301990109, result_301990109_Idx, ((x_301990110) + ""));

  
}

function addInt_301990126(result_301990127, result_301990127_Idx, x_301990128) {
    addInt_301990108(result_301990127, result_301990127_Idx, BigInt(x_301990128));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990126(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557246(ti_33557247) {
  var result_33557248 = false;

  BeforeRet: {
    result_33557248 = !((ConstSet1[ti_33557247.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557248;

}

function nimCopyAux(dest_33557259, src_33557260, n_33557261) {
    switch (n_33557261.kind) {
    case 0:
      break;
    case 1:
            dest_33557259[n_33557261.offset] = nimCopy(dest_33557259[n_33557261.offset], src_33557260[n_33557261.offset], n_33557261.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557261.sons.length; i++) {
      nimCopyAux(dest_33557259, src_33557260, n_33557261.sons[i]);
    }
    
      break;
    case 3:
            dest_33557259[n_33557261.offset] = nimCopy(dest_33557259[n_33557261.offset], src_33557260[n_33557261.offset], n_33557261.typ);
      for (var i = 0; i < n_33557261.sons.length; ++i) {
        nimCopyAux(dest_33557259, src_33557260, n_33557261.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556802, a_33556803, b_33556804) {
    var Temporary1;

    if ((b_33556804 < a_33556803)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556802) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556803) || [],[32,46,46,32] || [],HEX24_385875976(b_33556804) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function onDOMLoaded(e_536870953) {
            
function HEX3Aanonymous_536870976(event_536870977) {
                event_536870977.target.parentNode.style.display = "none";
                event_536870977.target.parentNode.nextSibling.style.display = "inline";

              
            }

    document.getElementById("theme-select").value = window.localStorage.getItem("theme");
    Label1: {
      var pragmaDots_536870975 = null;
      var colontmp__536872097 = [];
      colontmp__536872097 = document.getElementsByClassName("pragmadots");
      var i_536872099 = 0;
      var L_536872100 = (colontmp__536872097).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872099 < L_536872100)) break Label3;
            pragmaDots_536870975 = colontmp__536872097[chckIndx(i_536872099, 0, (colontmp__536872097).length - 1)];
            pragmaDots_536870975.onclick = HEX3Aanonymous_536870976;
            i_536872099 += 1;
            if (!(((colontmp__536872097).length == L_536872100))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function isWhitespace_536871317(x_536871318) {
  var result_536871319 = false;

    result_536871319 = (((x_536871318.nodeName == "#text") && !/\S/.test(x_536871318.textContent)) || (x_536871318.nodeName == "#comment"));

  return result_536871319;

}

function toToc_536871320(x_536871321, father_536871322) {
                var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;
      var Temporary15;

    if ((x_536871321.nodeName == "UL")) {
    var f_536871330 = {heading: null, kids: [], sortId: (father_536871322.kids).length, doSort: false};
    var i_536871331 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_536871331 < x_536871321.childNodes.length)) break Label2;
          var nxt_536871332 = addInt(i_536871331, 1);
          Label3: {
              Label4: while (true) {
                if (!(nxt_536871332 < x_536871321.childNodes.length)) Temporary5 = false; else {                  Temporary5 = isWhitespace_536871317(x_536871321.childNodes[nxt_536871332]);                }              if (!Temporary5) break Label4;
                nxt_536871332 = addInt(nxt_536871332, 1);
              }
          };
            if (!(nxt_536871332 < x_536871321.childNodes.length)) Temporary8 = false; else {              Temporary8 = (x_536871321.childNodes[i_536871331].nodeName == "LI");            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = (x_536871321.childNodes[i_536871331].childNodes.length == 1);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = (x_536871321.childNodes[nxt_536871332].nodeName == "UL");            }          if (Temporary6) {
          var e_536871344 = {heading: x_536871321.childNodes[i_536871331].childNodes[0], kids: [], sortId: (f_536871330.kids).length, doSort: false};
          var it_536871345 = x_536871321.childNodes[nxt_536871332];
          Label9: {
            var j_536871350 = 0;
            var colontmp__536872113 = 0;
            colontmp__536872113 = it_536871345.childNodes.length;
            var i_536872114 = 0;
            Label10: {
                Label11: while (true) {
                if (!(i_536872114 < colontmp__536872113)) break Label11;
                  j_536871350 = i_536872114;
                  toToc_536871320(it_536871345.childNodes[j_536871350], e_536871344);
                  i_536872114 = addInt(i_536872114, 1);
                }
            };
          };
          f_536871330.kids.push(e_536871344);;
          i_536871331 = addInt(nxt_536871332, 1);
          }
          else {
            toToc_536871320(x_536871321.childNodes[i_536871331], f_536871330);
            i_536871331 = addInt(i_536871331, 1);
          }
          
        }
    };
    father_536871322.kids.push(f_536871330);;
    }
    else {
    if (isWhitespace_536871317(x_536871321)) {
    }
    else {
    if ((x_536871321.nodeName == "LI")) {
    var idx_536871367 = [];
    Label12: {
      var i_536871372 = 0;
      var colontmp__536872117 = 0;
      colontmp__536872117 = x_536871321.childNodes.length;
      var i_536872118 = 0;
      Label13: {
          Label14: while (true) {
          if (!(i_536872118 < colontmp__536872117)) break Label14;
            i_536871372 = i_536872118;
            if (!(isWhitespace_536871317(x_536871321.childNodes[i_536871372]))) {
            idx_536871367.push(i_536871372);;
            }
            
            i_536872118 = addInt(i_536872118, 1);
          }
      };
    };
      if (!((idx_536871367).length == 2)) Temporary15 = false; else {        Temporary15 = (x_536871321.childNodes[idx_536871367[chckIndx(1, 0, (idx_536871367).length - 1)]].nodeName == "UL");      }    if (Temporary15) {
    var e_536871388 = {heading: x_536871321.childNodes[idx_536871367[chckIndx(0, 0, (idx_536871367).length - 1)]], kids: [], sortId: (father_536871322.kids).length, doSort: false};
    var it_536871389 = x_536871321.childNodes[idx_536871367[chckIndx(1, 0, (idx_536871367).length - 1)]];
    Label16: {
      var j_536871394 = 0;
      var colontmp__536872121 = 0;
      colontmp__536872121 = it_536871389.childNodes.length;
      var i_536872122 = 0;
      Label17: {
          Label18: while (true) {
          if (!(i_536872122 < colontmp__536872121)) break Label18;
            j_536871394 = i_536872122;
            toToc_536871320(it_536871389.childNodes[j_536871394], e_536871388);
            i_536872122 = addInt(i_536872122, 1);
          }
      };
    };
    father_536871322.kids.push(e_536871388);;
    }
    else {
      Label19: {
        var i_536871403 = 0;
        var colontmp__536872125 = 0;
        colontmp__536872125 = x_536871321.childNodes.length;
        var i_536872126 = 0;
        Label20: {
            Label21: while (true) {
            if (!(i_536872126 < colontmp__536872125)) break Label21;
              i_536871403 = i_536872126;
              toToc_536871320(x_536871321.childNodes[i_536871403], father_536871322);
              i_536872126 = addInt(i_536872126, 1);
            }
        };
      };
    }
    
    }
    else {
    father_536871322.kids.push({heading: x_536871321, kids: [], sortId: (father_536871322.kids).length, doSort: false});;
    }
    }}

  
}

function extractItems_536871109(x_536871110, heading_536871111, items_536871112, items_536871112_Idx) {
  BeforeRet: {
    if ((x_536871110 == null)) {
    break BeforeRet;
    }
    
    if ((!((x_536871110.heading == null)) && (x_536871110.heading.textContent == heading_536871111))) {
    Label1: {
      var i_536871129 = 0;
      var colontmp__536872129 = 0;
      colontmp__536872129 = (x_536871110.kids).length;
      var i_536872130 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872130 < colontmp__536872129)) break Label3;
            i_536871129 = i_536872130;
            items_536871112[items_536871112_Idx].push(x_536871110.kids[chckIndx(i_536871129, 0, (x_536871110.kids).length - 1)].heading);;
            i_536872130 = addInt(i_536872130, 1);
          }
      };
    };
    }
    else {
      Label4: {
        var k_536871154 = null;
        var i_536872134 = 0;
        var L_536872135 = (x_536871110.kids).length;
        Label5: {
            Label6: while (true) {
            if (!(i_536872134 < L_536872135)) break Label6;
              k_536871154 = x_536871110.kids[chckIndx(i_536872134, 0, (x_536871110.kids).length - 1)];
              extractItems_536871109(k_536871154, heading_536871111, items_536871112, items_536871112_Idx);
              i_536872134 += 1;
              if (!(((x_536871110.kids).length == L_536872135))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };

  
}

function tree_536871041(tag_536871042, kids_536871043) {
  var result_536871044 = null;

    result_536871044 = document.createElement(tag_536871042);
    Label1: {
      var k_536871057 = null;
      var i_536872147 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872147 < (kids_536871043).length)) break Label3;
            k_536871057 = kids_536871043[chckIndx(i_536872147, 0, (kids_536871043).length - 1)];
            result_536871044.appendChild(k_536871057);
            i_536872147 += 1;
          }
      };
    };

  return result_536871044;

}

function text_536871065(s_536871066) {
  var result_536871067 = null;

    result_536871067 = document.createTextNode(s_536871066);

  return result_536871067;

}

function uncovered_536871507(x_536871508) {
    var Temporary1;

  var result_536871509 = null;

  BeforeRet: {
    if ((((x_536871508.kids).length == 0) && !((x_536871508.heading == null)))) {
    if (!(x_536871508.heading.hasOwnProperty('__karaxMarker__'))) {
    Temporary1 = x_536871508;
    }
    else {
    Temporary1 = null;
    }
    
    result_536871509 = Temporary1;
    break BeforeRet;
    }
    
    result_536871509 = {heading: x_536871508.heading, kids: [], sortId: x_536871508.sortId, doSort: x_536871508.doSort};
    Label2: {
      var k_536871524 = null;
      var i_536872154 = 0;
      var L_536872155 = (x_536871508.kids).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536872154 < L_536872155)) break Label4;
            k_536871524 = x_536871508.kids[chckIndx(i_536872154, 0, (x_536871508.kids).length - 1)];
            var y_536871525 = uncovered_536871507(k_536871524);
            if (!((y_536871525 == null))) {
            result_536871509.kids.push(y_536871525);;
            }
            
            i_536872154 += 1;
            if (!(((x_536871508.kids).length == L_536872155))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((result_536871509.kids).length == 0)) {
    result_536871509 = null;
    }
    
  };

  return result_536871509;

}

function mergeTocs_536871537(orig_536871538, news_536871539) {
  var result_536871540 = null;

    result_536871540 = uncovered_536871507(orig_536871538);
    if ((result_536871540 == null)) {
    result_536871540 = news_536871539;
    }
    else {
      Label1: {
        var i_536871552 = 0;
        var colontmp__536872150 = 0;
        colontmp__536872150 = (news_536871539.kids).length;
        var i_536872151 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_536872151 < colontmp__536872150)) break Label3;
              i_536871552 = i_536872151;
              result_536871540.kids.push(news_536871539.kids[chckIndx(i_536871552, 0, (news_536871539.kids).length - 1)]);;
              i_536872151 = addInt(i_536872151, 1);
            }
        };
      };
    }
    

  return result_536871540;

}

function buildToc_536871557(orig_536871558, types_536871559, procs_536871560) {
  var result_536871561 = null;

    var newStuff_536871566 = {heading: null, kids: [], doSort: true, sortId: 0};
    Label1: {
      var t_536871570 = null;
      var i_536872142 = 0;
      var L_536872143 = (types_536871559).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872142 < L_536872143)) break Label3;
            t_536871570 = types_536871559[chckIndx(i_536872142, 0, (types_536871559).length - 1)];
            var c_536871575 = {heading: t_536871570.cloneNode(true), kids: [], doSort: true, sortId: 0};
            t_536871570.__karaxMarker__ = true;
            Label4: {
              var p_536871579 = null;
              var i_536872139 = 0;
              var L_536872140 = (procs_536871560).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872139 < L_536872140)) break Label6;
                    p_536871579 = procs_536871560[chckIndx(i_536872139, 0, (procs_536871560).length - 1)];
                    if (!(p_536871579.hasOwnProperty('__karaxMarker__'))) {
                    var xx_536871580 = p_536871579.parentNode.getElementsByClassName("attachedType");
                    if ((((xx_536871580).length == 1) && (xx_536871580[chckIndx(0, 0, (xx_536871580).length - 1)].textContent == t_536871570.textContent))) {
                    var q_536871585 = tree_536871041("A", [text_536871065(p_536871579.title)]);
                    q_536871585.setAttribute("href", p_536871579.getAttribute("href"));
                    c_536871575.kids.push({heading: q_536871585, kids: [], sortId: 0, doSort: false});;
                    p_536871579.__karaxMarker__ = true;
                    }
                    
                    }
                    
                    i_536872139 += 1;
                    if (!(((procs_536871560).length == L_536872140))) {
                    failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            newStuff_536871566.kids.push(c_536871575);;
            i_536872142 += 1;
            if (!(((types_536871559).length == L_536872143))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_536871561 = mergeTocs_536871537(orig_536871558, newStuff_536871566);

  return result_536871561;

}

function add_536871058(parent_536871059, kid_536871060) {
    if (((parent_536871059.nodeName == "TR") && ((kid_536871060.nodeName == "TD") || (kid_536871060.nodeName == "TH")))) {
    var k_536871061 = document.createElement("TD");
    k_536871061.appendChild(kid_536871060);
    parent_536871059.appendChild(k_536871061);
    }
    else {
    parent_536871059.appendChild(kid_536871060);
    }
    

  
}

function setClass_536871062(e_536871063, value_536871064) {
    e_536871063.setAttribute("class", value_536871064);

  
}

function toHtml_536871187(x_536871188, isRoot_536871189) {
    
function HEX3Aanonymous_536871207(a_536871208, b_536871209) {
      var result_536871210 = 0;

      BeforeRet: {
        if ((!((a_536871208.heading == null)) && !((b_536871209.heading == null)))) {
        var x_536871219 = a_536871208.heading.textContent;
        var y_536871220 = b_536871209.heading.textContent;
        if ((x_536871219 < y_536871220)) {
        result_536871210 = (-1);
        break BeforeRet;
        }
        
        if ((y_536871220 < x_536871219)) {
        result_536871210 = 1;
        break BeforeRet;
        }
        
        result_536871210 = 0;
        break BeforeRet;
        }
        else {
          result_536871210 = subInt(a_536871208.sortId, b_536871209.sortId);
          break BeforeRet;
        }
        
      };

      return result_536871210;

    }

  var result_536871190 = null;

  BeforeRet: {
    if ((x_536871188 == null)) {
    result_536871190 = null;
    break BeforeRet;
    }
    
    if (((x_536871188.kids).length == 0)) {
    if ((x_536871188.heading == null)) {
    result_536871190 = null;
    break BeforeRet;
    }
    
    result_536871190 = x_536871188.heading.cloneNode(true);
    break BeforeRet;
    }
    
    result_536871190 = tree_536871041("DIV", []);
    if ((!((x_536871188.heading == null)) && !(x_536871188.heading.hasOwnProperty('__karaxMarker__')))) {
    add_536871058(result_536871190, x_536871188.heading.cloneNode(true));
    }
    
    var ul_536871206 = tree_536871041("UL", []);
    if (isRoot_536871189) {
    setClass_536871062(ul_536871206, "simple simple-toc");
    }
    else {
    setClass_536871062(ul_536871206, "simple");
    }
    
    if (x_536871188.doSort) {
    x_536871188.kids.sort(HEX3Aanonymous_536871207);
    }
    
    Label1: {
      var k_536871232 = null;
      var i_536872158 = 0;
      var L_536872159 = (x_536871188.kids).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872158 < L_536872159)) break Label3;
            k_536871232 = x_536871188.kids[chckIndx(i_536872158, 0, (x_536871188.kids).length - 1)];
            var y_536871233 = toHtml_536871187(k_536871232, false);
            if (!((y_536871233 == null))) {
            add_536871058(ul_536871206, tree_536871041("LI", [y_536871233]));
            }
            
            i_536872158 += 1;
            if (!(((x_536871188.kids).length == L_536872159))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((ul_536871206.childNodes.length == 0))) {
    add_536871058(result_536871190, ul_536871206);
    }
    
    if ((result_536871190.childNodes.length == 0)) {
    result_536871190 = null;
    }
    
  };

  return result_536871190;

}

function replaceById_536871068(id_536871069, newTree_536871070) {
    var x_536871071 = document.getElementById(id_536871069);
    x_536871071.parentNode.replaceChild(newTree_536871070, x_536871071);
    newTree_536871070.id = id_536871069;

  
}

function togglevis_536871615(d_536871616) {
    if ((d_536871616.style.display == "none")) {
    d_536871616.style.display = "inline";
    }
    else {
      d_536871616.style.display = "none";
    }
    

  
}

function groupBy(value_536871618) {
    var toc_536871619 = document.getElementById("toc-list");
    if ((alternative_536871614[0] == null)) {
    var tt_536871627 = {heading: null, kids: [], sortId: 0, doSort: false};
    toToc_536871320(toc_536871619, tt_536871627);
    tt_536871627 = tt_536871627.kids[chckIndx(0, 0, (tt_536871627.kids).length - 1)];
    var types_536871632 = [[]];
    var procs_536871637 = [[]];
    extractItems_536871109(tt_536871627, "Types", types_536871632, 0);
    extractItems_536871109(tt_536871627, "Procs", procs_536871637, 0);
    extractItems_536871109(tt_536871627, "Converters", procs_536871637, 0);
    extractItems_536871109(tt_536871627, "Methods", procs_536871637, 0);
    extractItems_536871109(tt_536871627, "Templates", procs_536871637, 0);
    extractItems_536871109(tt_536871627, "Macros", procs_536871637, 0);
    extractItems_536871109(tt_536871627, "Iterators", procs_536871637, 0);
    var ntoc_536871638 = buildToc_536871557(tt_536871627, types_536871632[0], procs_536871637[0]);
    var x_536871639 = toHtml_536871187(ntoc_536871638, true);
    alternative_536871614[0] = tree_536871041("DIV", [x_536871639]);
    }
    
    if ((value_536871618 == "type")) {
    replaceById_536871068("tocRoot", alternative_536871614[0]);
    }
    else {
    replaceById_536871068("tocRoot", tree_536871041("DIV", []));
    }
    
    togglevis_536871615(document.getElementById("toc-list"));

  
}

function HEX5BHEX5D_704644331(s_704644334, x_704644335) {
  var result_704644336 = [];

    var a_704644338 = x_704644335.a;
    var L_704644340 = addInt(subInt(subInt((s_704644334).length, x_704644335.b), a_704644338), 1);
    result_704644336 = nimCopy(null, mnewString(chckRange(L_704644340, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_704644345 = 0;
      var i_536872168 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872168 < L_704644340)) break Label3;
            i_704644345 = i_536872168;
            result_704644336[chckIndx(i_704644345, 0, (result_704644336).length - 1)] = s_704644334[chckIndx(addInt(i_704644345, a_704644338), 0, (s_704644334).length - 1)];
            i_536872168 = addInt(i_536872168, 1);
          }
      };
    };

  return result_704644336;

}

function HEX2EHEX2E_922746983(a_922746986, b_922746987) {
  var result_922746990 = ({a: 0, b: 0});

    result_922746990 = nimCopy(result_922746990, {a: a_922746986, b: b_922746987}, NTI922746963);

  return result_922746990;

}
async function loadIndex_536871835() {
  var result_536871837 = null;

  BeforeRet: {
    var indexURL_536871843 = document.getElementById("indexLink").getAttribute("href");
    var rootURL_536871868 = HEX5BHEX5D_704644331(cstrToNimstr(indexURL_536871843), HEX2EHEX2E_922746983(0, 14));
    var resp_536871880 = (await (await fetch(indexURL_536871843)).text());
    var indexElem_536871881 = document.createElement("div");
    indexElem_536871881.innerHTML = resp_536871880;
    Label1: {
      var href_536871902 = null;
      var colontmp__536872162 = [];
      colontmp__536872162 = indexElem_536871881.getElementsByClassName("reference");
      var i_536872164 = 0;
      var L_536872165 = (colontmp__536872162).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872164 < L_536872165)) break Label3;
            href_536871902 = colontmp__536872162[chckIndx(i_536872164, 0, (colontmp__536872162).length - 1)];
            href_536871902.setAttribute("href", toJSStr((rootURL_536871868 || []).concat(cstrToNimstr(href_536871902.getAttribute("href")) || [])));
            db_536871656[0].push(href_536871902);;
            contents_536871657[0].push(href_536871902.getAttribute("data-doc-search-tag"));;
            i_536872164 += 1;
            if (!(((colontmp__536872162).length == L_536872165))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_536871837 = undefined;
    break BeforeRet;
  };

  return result_536871837;

}

function then_536872011(future_536872014, onSuccess_536872015, onReject_536872016) {
  var result_536872017 = null;

  BeforeRet: {
    var ret_536872027 = null;
    ret_536872027 = future_536872014.then(onSuccess_536872015, onReject_536872016)
    result_536872017 = ret_536872027;
    break BeforeRet;
  };

  return result_536872017;

}

function nsuToLowerAsciiChar(c_704643157) {
  var result_704643158 = 0;

    if ((ConstSet2[c_704643157] != undefined)) {
    result_704643158 = (c_704643157 ^ 32);
    }
    else {
      result_704643158 = c_704643157;
    }
    

  return result_704643158;

}

function fuzzyMatch_687865872(pattern_687865873, str_687865874) {
              var Temporary4;
              var Temporary5;
                var Temporary6;
      var Temporary7;
        var Temporary8;

  var result_687865877 = {Field0: 0, Field1: false};

    var scoreState_687865878 = (-100);
    var headerMatched_687865879 = false;
    var unmatchedLeadingCharCount_687865880 = 0;
    var consecutiveMatchCount_687865881 = 0;
    var strIndex_687865882 = 0;
    var patIndex_687865883 = 0;
    var score_687865884 = 0;
    Label1: {
        Label2: while (true) {
        if (!((strIndex_687865882 < ((str_687865874) == null ? 0 : (str_687865874).length)) && (patIndex_687865883 < ((pattern_687865873) == null ? 0 : (pattern_687865873).length)))) break Label2;
          Label3: {
            var patternChar_687865887 = nsuToLowerAsciiChar(pattern_687865873.charCodeAt(chckIndx(patIndex_687865883, 0, (pattern_687865873).length - 1)));
            var strChar_687865888 = nsuToLowerAsciiChar(str_687865874.charCodeAt(chckIndx(strIndex_687865882, 0, (str_687865874).length - 1)));
            if ((ConstSet3[patternChar_687865887] != undefined)) {
            patIndex_687865883 = addInt(patIndex_687865883, 1);
            break Label3;
            }
            
            if ((ConstSet4[strChar_687865888] != undefined)) {
            strIndex_687865882 = addInt(strIndex_687865882, 1);
            break Label3;
            }
            
            if ((!(headerMatched_687865879) && (strChar_687865888 == 58))) {
            headerMatched_687865879 = true;
            scoreState_687865878 = (-100);
            score_687865884 = ((Math.floor((0.5 * score_687865884))) | 0);
            patIndex_687865883 = 0;
            strIndex_687865882 = addInt(strIndex_687865882, 1);
            break Label3;
            }
            
            if ((strChar_687865888 == patternChar_687865887)) {
            switch (scoreState_687865878) {
            case (-100):
            case 20:
              scoreState_687865878 = 10;
              break;
            case 0:
              scoreState_687865878 = 5;
              score_687865884 = addInt(score_687865884, scoreState_687865878);
              break;
            case 10:
            case 5:
              consecutiveMatchCount_687865881 = addInt(consecutiveMatchCount_687865881, 1);
              scoreState_687865878 = 5;
              score_687865884 = addInt(score_687865884, mulInt(5, consecutiveMatchCount_687865881));
              if ((scoreState_687865878 == 10)) {
              score_687865884 = addInt(score_687865884, 10);
              }
              
              var onBoundary_687865940 = (patIndex_687865883 == ((pattern_687865873) == null ? -1 : (pattern_687865873).length - 1));
              if ((!(onBoundary_687865940) && (strIndex_687865882 < ((str_687865874) == null ? -1 : (str_687865874).length - 1)))) {
              var nextPatternChar_687865941 = nsuToLowerAsciiChar(pattern_687865873.charCodeAt(chckIndx(addInt(patIndex_687865883, 1), 0, (pattern_687865873).length - 1)));
              var nextStrChar_687865942 = nsuToLowerAsciiChar(str_687865874.charCodeAt(chckIndx(addInt(strIndex_687865882, 1), 0, (str_687865874).length - 1)));
              if (!!((ConstSet5[nextStrChar_687865942] != undefined))) Temporary4 = false; else {                Temporary4 = !((nextStrChar_687865942 == nextPatternChar_687865941));              }              onBoundary_687865940 = Temporary4;
              }
              
              if (onBoundary_687865940) {
              scoreState_687865878 = 20;
              score_687865884 = addInt(score_687865884, scoreState_687865878);
              }
              
              break;
            case (-1):
            case (-3):
              if (!((ConstSet6[str_687865874.charCodeAt(chckIndx(subInt(strIndex_687865882, 1), 0, (str_687865874).length - 1))] != undefined))) Temporary5 = true; else {                if (!(ConstSet7[str_687865874.charCodeAt(chckIndx(subInt(strIndex_687865882, 1), 0, (str_687865874).length - 1))] != undefined)) Temporary6 = false; else {                  Temporary6 = (ConstSet8[str_687865874.charCodeAt(chckIndx(strIndex_687865882, 0, (str_687865874).length - 1))] != undefined);                }                Temporary5 = Temporary6;              }              var isLeadingChar_687865966 = Temporary5;
              if (isLeadingChar_687865966) {
              scoreState_687865878 = 10;
              }
              else {
                scoreState_687865878 = 0;
                score_687865884 = addInt(score_687865884, scoreState_687865878);
              }
              
              break;
            }
            patIndex_687865883 = addInt(patIndex_687865883, 1);
            }
            else {
              switch (scoreState_687865878) {
              case (-100):
                scoreState_687865878 = (-3);
                score_687865884 = addInt(score_687865884, scoreState_687865878);
                break;
              case 5:
                scoreState_687865878 = (-1);
                score_687865884 = addInt(score_687865884, scoreState_687865878);
                consecutiveMatchCount_687865881 = 0;
                break;
              case (-3):
                if ((unmatchedLeadingCharCount_687865880 < 3)) {
                scoreState_687865878 = (-3);
                score_687865884 = addInt(score_687865884, scoreState_687865878);
                }
                
                unmatchedLeadingCharCount_687865880 = addInt(unmatchedLeadingCharCount_687865880, 1);
                break;
              default: 
                scoreState_687865878 = (-1);
                score_687865884 = addInt(score_687865884, scoreState_687865878);
                break;
              }
            }
            
            strIndex_687865882 = addInt(strIndex_687865882, 1);
          };
        }
    };
      if (!(patIndex_687865883 == ((pattern_687865873) == null ? 0 : (pattern_687865873).length))) Temporary7 = false; else {        if ((strIndex_687865882 == ((str_687865874) == null ? 0 : (str_687865874).length))) Temporary8 = true; else {          Temporary8 = !((ConstSet9[str_687865874.charCodeAt(chckIndx(strIndex_687865882, 0, (str_687865874).length - 1))] != undefined));        }        Temporary7 = Temporary8;      }    if (Temporary7) {
    score_687865884 = addInt(score_687865884, 10);
    }
    
    var colontmp__536872181 = nimMax(0, score_687865884);
    var colontmp__536872182 = (0 < score_687865884);
    result_687865877 = nimCopy(result_687865877, {Field0: colontmp__536872181, Field1: colontmp__536872182}, NTI687865870);

  return result_687865877;

}

function escapeCString_536871658(x_536871659, x_536871659_Idx) {
    var s_536871660 = [];
    Label1: {
      var c_536871661 = 0;
      var iHEX60gensym13_536872185 = 0;
      var nHEX60gensym13_536872186 = ((x_536871659[x_536871659_Idx]) == null ? 0 : (x_536871659[x_536871659_Idx]).length);
      Label2: {
          Label3: while (true) {
          if (!(iHEX60gensym13_536872185 < nHEX60gensym13_536872186)) break Label3;
            c_536871661 = x_536871659[x_536871659_Idx].charCodeAt(chckIndx(iHEX60gensym13_536872185, 0, (x_536871659[x_536871659_Idx]).length - 1));
            switch (c_536871661) {
            case 60:
              s_536871660.push.apply(s_536871660, [38,108,116,59]);;
              break;
            case 62:
              s_536871660.push.apply(s_536871660, [38,103,116,59]);;
              break;
            default: 
              addChar(s_536871660, c_536871661);;
              break;
            }
            iHEX60gensym13_536872185 += 1;
          }
      };
    };
    x_536871659[x_536871659_Idx] = toJSStr(s_536871660);

  
}

function dosearch_536871662(value_536871663) {
    
function HEX3Aanonymous_536871690(a_536871695, b_536871696) {
      var result_536871703 = 0;

        result_536871703 = subInt(b_536871696["Field1"], a_536871695["Field1"]);

      return result_536871703;

    }

  var result_536871664 = null;

  BeforeRet: {
    if (((db_536871656[0]).length == 0)) {
    break BeforeRet;
    }
    
    var ul_536871668 = tree_536871041("UL", []);
    result_536871664 = tree_536871041("DIV", []);
    setClass_536871062(result_536871664, "search_results");
    var matches_536871673 = [];
    Label1: {
      var i_536871681 = 0;
      var colontmp__536872172 = 0;
      colontmp__536872172 = (db_536871656[0]).length;
      var i_536872173 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872173 < colontmp__536872172)) break Label3;
            i_536871681 = i_536872173;
            Label4: {
              var c_536871682 = contents_536871657[0][chckIndx(i_536871681, 0, (contents_536871657[0]).length - 1)];
              if (((c_536871682 == "Examples") || (c_536871682 == "PEG construction"))) {
              break Label4;
              }
              
              var tmpTuple_536871683 = fuzzyMatch_687865872(value_536871663, c_536871682);
              var score_536871684 = tmpTuple_536871683["Field0"];
              var matched_536871685 = tmpTuple_536871683["Field1"];
              if (matched_536871685) {
              matches_536871673.push({Field0: db_536871656[0][chckIndx(i_536871681, 0, (db_536871656[0]).length - 1)], Field1: score_536871684});;
              }
              
            };
            i_536872173 = addInt(i_536872173, 1);
          }
      };
    };
    matches_536871673.sort(HEX3Aanonymous_536871690);
    Label5: {
      var i_536871720 = 0;
      var colontmp__536872176 = 0;
      colontmp__536872176 = nimMin((matches_536871673).length, 29);
      var i_536872177 = 0;
      Label6: {
          Label7: while (true) {
          if (!(i_536872177 < colontmp__536872176)) break Label7;
            i_536871720 = i_536872177;
            matches_536871673[chckIndx(i_536871720, 0, (matches_536871673).length - 1)]["Field0"].innerHTML = matches_536871673[chckIndx(i_536871720, 0, (matches_536871673).length - 1)]["Field0"].getAttribute("data-doc-search-tag");
            escapeCString_536871658(matches_536871673[chckIndx(i_536871720, 0, (matches_536871673).length - 1)]["Field0"], "innerHTML");
            add_536871058(ul_536871668, tree_536871041("LI", [matches_536871673[chckIndx(i_536871720, 0, (matches_536871673).length - 1)]["Field0"]]));
            i_536872177 = addInt(i_536872177, 1);
          }
      };
    };
    if ((ul_536871668.childNodes.length == 0)) {
    add_536871058(result_536871664, tree_536871041("B", [text_536871065("no search results")]));
    }
    else {
      add_536871058(result_536871664, tree_536871041("B", [text_536871065("search results")]));
      add_536871058(result_536871664, ul_536871668);
    }
    
  };

  return result_536871664;

}

function search() {
    
function wrapper_536871996() {
        var elem_536871997 = document.getElementById("searchInput");
        var value_536871998 = elem_536871997.value;
        if (!((((value_536871998) == null ? 0 : (value_536871998).length) == 0))) {
        if ((oldtoc_536871991[0] == null)) {
        oldtoc_536871991[0] = document.getElementById("tocRoot");
        }
        
        var results_536872002 = dosearch_536871662(value_536871998);
        replaceById_536871068("tocRoot", results_536872002);
        }
        else {
        if (!((oldtoc_536871991[0] == null))) {
        replaceById_536871068("tocRoot", oldtoc_536871991[0]);
        }
        }

      
    }

    if ((loadIndexFut_536871994[0] == null)) {
    loadIndexFut_536871994[0] = loadIndex_536871835();
    var _ = then_536872011(loadIndexFut_536871994[0], wrapper_536871996, null);
    }
    
    if (!((timer_536871992[0] == null))) {
    clearTimeout(timer_536871992[0]);
    }
    
    timer_536871992[0] = setTimeout(wrapper_536871996, 400);

  
}

function copyToClipboard() {
    
    function updatePreTags() {

      const allPreTags = document.querySelectorAll("pre")
    
      allPreTags.forEach((e) => {
      
          const div = document.createElement("div")
          div.classList.add("copyToClipBoard")
    
          const preTag = document.createElement("pre")
          preTag.innerHTML = e.innerHTML
    
          const button = document.createElement("button")
          button.value = e.textContent.replace('...', '') 
          button.classList.add("copyToClipBoardBtn")
          button.style.cursor = "pointer"
    
          div.appendChild(preTag)
          div.appendChild(button)
    
          e.outerHTML = div.outerHTML
      
      })
    }


    function copyTextToClipboard(e) {
        const clipBoardContent = e.target.value
        navigator.clipboard.writeText(clipBoardContent).then(function() {
            e.target.style.setProperty("--clipboard-image", "var(--clipboard-image-selected)")
        }, function(err) {
            console.error("Could not copy text: ", err);
        });
    }

    window.addEventListener("click", (e) => {
        if (e.target.classList.contains("copyToClipBoardBtn")) {
            copyTextToClipboard(e)
          }
    })

    window.addEventListener("mouseover", (e) => {
        if (e.target.nodeName === "PRE") {
            e.target.nextElementSibling.style.setProperty("--clipboard-image", "var(--clipboard-image-normal)")
        }
    })
    
    window.addEventListener("DOMContentLoaded", updatePreTags)

    

  
}
var Temporary1;
var t_536870951 = window.localStorage.getItem("theme");
if ((t_536870951 == null)) {
Temporary1 = "auto";
}
else {
Temporary1 = t_536870951;
}

setTheme(Temporary1);
var alternative_536871614 = [null];
var db_536871656 = [[]];
var contents_536871657 = [[]];
var oldtoc_536871991 = [null];
var timer_536871992 = [null];
var loadIndexFut_536871994 = [null];
copyToClipboard();
window.addEventListener("DOMContentLoaded", onDOMLoaded, false);
